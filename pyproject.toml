[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "aida-voice-assistant"
version = "1.0.0"
description = "Advanced AI Voice Assistant with real-time processing"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "AIDA Team"},
]
keywords = ["voice", "assistant", "ai", "speech", "nlp"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    # Core voice processing
    "vosk>=0.3.40",
    "pyttsx3>=2.90",
    "pyaudio>=0.2.11",
    "speechrecognition>=3.10.0",
    
    # AI and NLP
    "ollama>=0.1.7",
    "spacy>=3.7.0,<4.0.0",
    "chromadb>=0.4.0,<1.0.0",
    "sentence-transformers>=2.2.0,<3.0.0",
    
    # Audio visualization
    "pygame>=2.5.0",
    "numpy>=1.24.0",
    "matplotlib>=3.7.0",
    
    # System and utilities
    "psutil>=5.9.0",
    "requests>=2.31.0",
    "python-dotenv>=1.0.0",
    "colorama>=0.4.6",
    "rich>=13.5.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "black>=23.7.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]

test = [
    "pytest>=7.4.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
]

audio = [
    "sounddevice>=0.4.0",
    "librosa>=0.10.0",
    "scipy>=1.10.0",
]

[project.urls]
Homepage = "https://github.com/wspotter/aida"
Repository = "https://github.com/wspotter/aida"
Issues = "https://github.com/wspotter/aida/issues"

[project.scripts]
aida = "src.voice_assistant:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true